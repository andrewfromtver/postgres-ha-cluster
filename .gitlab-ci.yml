variables:
    GIT_CLONE_PATH: '$CI_BUILDS_DIR/$CI_PROJECT_NAME'

stages:
  - cache
  - deploy

cache-job:
  stage: cache
  tags:
    - vagrant
  cache:
    paths:
      - .vagrant
  script:
    - mkdir -p .vagrant
    - find .vagrant -type f -printf "%T@ %p\n" | sort -nr | cut -d\  -f2-

deploy-job:
  stage: deploy
  tags:
    - vagrant
  cache:
    paths:
      - .vagrant
  before_script:
    - curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20üõ†%20%5B$CI_PROJECT_NAME%5D%20Deploy%20job%20started"
  script:
    - vagrant destroy -f
    - vagrant up 2>&1 | tee deploy.log
  after_script:
    - >
      if [ $CI_JOB_STATUS == 'success' ]; then
        curl -F document=@"deploy.log" https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendDocument?chat_id=$TELEGRAM_CHAT_ID
        curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20üöÄ%20%5B$CI_PROJECT_NAME%5D%20Deploy%20job%20completed%20$PROJECT_URL"
      else
        curl "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_CHAT_ID&text=%20‚ùå%20%5B$CI_PROJECT_NAME%5D%20Deploy%20job%20failed%20$CI_PIPELINE_URL"
      fi
